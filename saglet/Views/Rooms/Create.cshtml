@model SAGLET.Models.Room

@{
    ViewBag.Title = "Create";
}

<h2>Create</h2>


@using (Html.BeginForm())
{
    <h4>Room</h4>
    <hr />
    @Html.AntiForgeryToken()
    <div class="row">
        <div class="form-horizontal col-md-4">
            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
            <div class="form-group">
                @Html.LabelFor(model => model.ID, htmlAttributes: new { @class = "control-label col-md-3" })
                <div class="col-md-9">
                    @Html.EditorFor(model => model.ID, new { htmlAttributes = new { @class = "form-control", @placeholder = "Room id in VMT" } })
                    @Html.ValidationMessageFor(model => model.ID, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Sync, htmlAttributes: new { @class = "control-label col-md-3" })
                <div class="col-md-9">
                    @Html.EditorFor(model => model.Sync, new { htmlAttributes = new { @class = "form-control" } })
                    @*@Html.ValidationMessageFor(model => model.Sync, "", new { @class = "text-danger" })*@
                </div>
            </div>

            <div class="form-group">
                <div class="col-md-offset-3 col-md-9">
                    <input type="submit" value="Create" class="btn btn-default" disabled />
                </div>
            </div>
        </div>

        <div class="form-horizontal col-md-5">

            <div class="form-group">
                @Html.Label("Room Name", htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-6">
                    @Html.TextBox("roomName", null, new { @class = "form-control", @readonly = "readonly", @required = "required" })
                    @*@Html.ValidationMessageFor(model => model.SyncInterval, "", new { @class = "text-danger" })*@
                </div>
            </div>

            <div class="form-group">
                @Html.Label("Description", htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-6">
                    @Html.TextBox("description", null, new { @class = "form-control", @readonly = "readonly", @required = "required" })
                    @*@Html.ValidationMessageFor(model => model.SyncInterval, "", new { @class = "text-danger" })*@
                </div>
            </div>

            <div class="form-group">
                @Html.Label("Moderator", htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-6">
                    @Html.TextBox("mod", null, new { @class = "form-control", @readonly = "readonly", @required = "required" })
                    @*@Html.ValidationMessageFor(model => model.SyncInterval, "", new { @class = "text-danger" })*@
                </div>
            </div>

            <div class="form-group">
                @Html.Label("Tabs ID", htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-6">
                    @Html.TextBox("tabs", null, new { @class = "form-control", @readonly = "readonly", @required = "required" })
                    @*@Html.ValidationMessageFor(model => model.SyncInterval, "", new { @class = "text-danger" })*@
                </div>
            </div>

        </div>
    </div>



}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
    <script src="~/Scripts/vmt-rest-api.js"></script>
}
